{"version":3,"sources":["items.ts","components/Nav.tsx","components/Checkbox.tsx","App.tsx","index.tsx"],"names":["Property","View","items","name","price","organic","lactose","nuts","sort","a","b","Checkbox","text","checked","setter","type","className","onChange","e","target","NavButton","setView","current","to","style","onClick","Nav","CLIENT","PRODUCTS","CART","AddItem","item","index","addItem","App","useState","view","lactoseIntolerant","setLactoseIntolerant","nutAllergy","setNutAllergy","organicOnly","setOrganicOnly","map","_","order","setOrder","copy","i","filterItem","count","removeItem","reduce","total","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb2ee5f2.chunk.js","sourcesContent":["export enum Property {\r\n  ORGANIC,\r\n  VEGETARIAN,\r\n  GLUTEN_FREE,\r\n  CONTAINS_LACTOSE,\r\n  CONTAINS_NUTS,\r\n}\r\n\r\nexport type Item = {\r\n  name: string;\r\n  price: number;\r\n  organic?: boolean;\r\n  lactose?: boolean;\r\n  nuts?: boolean;\r\n};\r\n\r\nconst items: Item[] = [\r\n  {\r\n    name: \"Apple\",\r\n    price: 1,\r\n    organic: true,\r\n  },\r\n  {\r\n    name: \"Orange\",\r\n    price: 1,\r\n    organic: true,\r\n  },\r\n  {\r\n    name: \"Milk\",\r\n    price: 5,\r\n    organic: true,\r\n    lactose: true,\r\n  },\r\n  {\r\n    name: \"Almond Milk\",\r\n    price: 5,\r\n    organic: true,\r\n    nuts: true,\r\n  },\r\n  {\r\n    name: \"Ice Cream\",\r\n    price: 10,\r\n    lactose: true,\r\n  },\r\n  {\r\n    name: \"Peanut Butter\",\r\n    price: 3,\r\n    nuts: true,\r\n  },\r\n  {\r\n    name: \"Peanuts\",\r\n    price: 1,\r\n    nuts: true,\r\n    organic: true,\r\n  },\r\n  {\r\n    name: \"Lays Chips\",\r\n    price: 2,\r\n  },\r\n\t{\r\n    name: \"Frozen French Fries\",\r\n    price: 2,\r\n  },\r\n\t{\r\n    name: \"Frozen French Fries\",\r\n    price: 2,\r\n  },\r\n].sort((a, b) => a.price - b.price);\r\n\r\nexport { items };\r\n","export enum View {\r\n  CLIENT,\r\n  PRODUCTS,\r\n  CART,\r\n}\r\n\r\ntype Props = { setView: React.Dispatch<View>; current: View };\r\n\r\nconst NavButton: React.FC<Props & { to: View; text: string }> = ({\r\n  setView,\r\n  current,\r\n  to,\r\n  text,\r\n}) => {\r\n  const style = current === to ? \"underline\" : \"\";\r\n\r\n  return (\r\n    <button\r\n      className={`text-blue-500 focus:outline-none mr-4 ${style}`}\r\n      onClick={() => setView(to)}\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport const Nav: React.FC<Props> = ({ setView, current }) => {\r\n  return (\r\n    <div className=\"mb-5\">\r\n      <NavButton\r\n        current={current}\r\n        setView={setView}\r\n        to={View.CLIENT}\r\n        text=\"Client\"\r\n      />\r\n      <NavButton\r\n        current={current}\r\n        setView={setView}\r\n        to={View.PRODUCTS}\r\n        text=\"Products\"\r\n      />\r\n\r\n      <NavButton\r\n        current={current}\r\n        setView={setView}\r\n        to={View.CART}\r\n        text=\"Cart\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","type Props = {\r\n  text: string;\r\n  checked: boolean;\r\n  setter: React.Dispatch<boolean>;\r\n};\r\n\r\nexport const Checkbox: React.FC<Props> = ({ text, checked, setter }) => {\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"checkbox\"\r\n        className=\"align-middle\"\r\n        checked={checked}\r\n        onChange={(e) => setter(e.target.checked)}\r\n      />{\" \"}\r\n      <span className=\"align-middle my-0\">{text}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Checkbox;\r\n","import { items, Item } from \"items\";\r\nimport React, { useState } from \"react\";\r\nimport Checkbox from \"components/Checkbox\";\r\nimport Nav, { View } from \"components/Nav\";\r\n\r\ntype AddItemProps = {\r\n  item: Item;\r\n  index: number;\r\n  addItem: (index: number) => void;\r\n};\r\n\r\nconst AddItem: React.FC<AddItemProps> = ({ item, index, addItem }) => {\r\n  return (\r\n    <div className=\"shadow mb-3 p-3 w-48 inline-block mr-5 mb-5\">\r\n      <h2 className=\"mb-2\">\r\n        {item.name} ${item.price}\r\n      </h2>\r\n      <button\r\n        onClick={() => addItem(index)}\r\n        className=\"w-full bg-green-500 py-1 px-3 text-xs text-white rounded-sm hover:bg-green-600 font-semibold focus:outline-none\"\r\n      >\r\n        Add to Cart\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst App: React.FC = () => {\r\n  const [view, setView] = useState<View>(View.CLIENT);\r\n  const [lactoseIntolerant, setLactoseIntolerant] = useState<boolean>(false);\r\n  const [nutAllergy, setNutAllergy] = useState<boolean>(false);\r\n  const [organicOnly, setOrganicOnly] = useState<boolean>(false);\r\n  const [order, setOrder] = useState<number[]>(items.map((_) => 0));\r\n\r\n  const addItem = (item: number): void => {\r\n    let copy = [...order];\r\n    copy[item] += 1;\r\n    setOrder(copy);\r\n  };\r\n\r\n  const removeItem = (item: number): void => {\r\n    let copy = [...order];\r\n    copy[item] = 0;\r\n    setOrder(copy);\r\n  };\r\n\r\n  const total = () => {\r\n    return order\r\n      .map((count, i) => items[i].price * count)\r\n      .reduce((total, price) => total + price, 0);\r\n  };\r\n\r\n  const filterItem = (item: Item): boolean => {\r\n    if (lactoseIntolerant && item.lactose) {\r\n      return false;\r\n    } else if (nutAllergy && item.nuts) {\r\n      return false;\r\n    } else if (organicOnly && !item.organic) {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-5\">\r\n      <h1 className=\"text-6xl mb-3\">Loblaws</h1>\r\n      <Nav setView={setView} current={view} />\r\n      {view === View.CLIENT && (\r\n        <div>\r\n          <h1 className=\"text-4xl font-semibold mb-3\">Client Information</h1>\r\n          <Checkbox\r\n            text=\"Lactose Intolerant\"\r\n            checked={lactoseIntolerant}\r\n            setter={setLactoseIntolerant}\r\n          />\r\n          <Checkbox\r\n            text=\"Nut Allergy\"\r\n            checked={nutAllergy}\r\n            setter={setNutAllergy}\r\n          />\r\n          <Checkbox\r\n            text=\"Organic Only\"\r\n            checked={organicOnly}\r\n            setter={setOrganicOnly}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {view === View.PRODUCTS && (\r\n        <div>\r\n          <h1 className=\"text-4xl font-semibold mb-3\">Products</h1>\r\n          {items.map((item, i) => {\r\n            if (!filterItem(item)) {\r\n              return;\r\n            }\r\n\r\n            return <AddItem item={item} index={i} addItem={addItem} />;\r\n          })}\r\n        </div>\r\n      )}\r\n\r\n      {view === View.CART && (\r\n        <div className=\"shadow mb-3 p-3\">\r\n          <h1 className=\"text-4xl font-semibold mb-3\">Cart</h1>\r\n\r\n          {order.map((count, i) => {\r\n            if (count === 0) {\r\n              return;\r\n            }\r\n\r\n            let item = items[i];\r\n            return (\r\n              <div className=\"w-72 mb-1\">\r\n                <h2>\r\n                  {item.name} x{count} - ${item.price * count}{\" \"}\r\n                  <button\r\n                    onClick={() => removeItem(i)}\r\n                    className=\"float-right text-red-500\"\r\n                  >\r\n                    Remove\r\n                  </button>\r\n                </h2>\r\n              </div>\r\n            );\r\n          })}\r\n          <p className=\"font-semibold mt-3\">Total: ${total()}</p>\r\n        </div>\r\n      )}\r\n      <p className=\"absolute bottom-0 mb-5 text-gray-500\">\r\n        Created by Daniel Holmes\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport \"./css/custom.css\";\r\nimport \"./css/tailwind.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}